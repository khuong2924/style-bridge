spring.application.name=posting-service
server.port=${SERVER_PORT:8082}
server.servlet.context-path=${SERVER_SERVLET_CONTEXT_PATH:/posting}

# PostgreSQL Configura
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:posting_db}?autoCommit=false
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:123456}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.connection-timeout=${DATASOURCE_CONNECTION_TIMEOUT:120000}
spring.datasource.hikari.maximum-pool-size=${DATASOURCE_MAX_POOL_SIZE:5}
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.auto-commit=false

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.mode=never
spring.sql.init.schema-locations=classpath:backup.sql

# Logging
logging.level.org.springframework.web=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
logging.level.org.hibernate=ERROR
logging.level.com.zaxxer.hikari=DEBUG
logging.level.khuong.com.postingservice=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.khuong.com.postingservice.configs.security=DEBUG
logging.level.khuong.com.postingservice.configs.jwt=DEBUG

# Web Configuration
spring.main.web-application-type=servlet
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.location=${java.io.tmpdir}

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:decz34g1a}
cloudinary.api-key=${CLOUDINARY_API_KEY:325126569821533}
cloudinary.api-secret=${CLOUDINARY_API_SECRET:wqcbw8JTOaND-yfguO_6p8NhwHc}

# JWT Configuration
app.jwt.secret=rSp/kisYeCdda6X8j0HA6jYCcpevXe6LQe3wHTPTC7GP5bQ5gqN15cLkAhtVomGpmT08rSqoyiD1wRxFOGhg8A==
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# RabbitMQ
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# RabbitMQ Queue Names
posting.queue.orders=posting.orders
posting.queue.order-updates=posting.order-updates
posting.queue.menu-updates=posting.menu-updates

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.rabbitmq.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.defaults.enabled=true

# Health Check Groups
management.health.group.readiness.include=db,rabbitmq
management.health.group.liveness.include=ping

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000

spring.cache.type=none
spring.jpa.open-in-view=true

spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Configure transaction settings
spring.transaction.default-timeout=60